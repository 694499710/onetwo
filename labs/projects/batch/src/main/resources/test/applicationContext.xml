<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:p="http://www.springframework.org/schema/p"
    xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
						http://www.springframework.org/schema/jee 
						http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.1.xsd
						http://www.springframework.org/schema/batch 
           				http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
						http://www.springframework.org/schema/util
						http://www.springframework.org/schema/util/spring-util-3.1.xsd
					    http://www.springframework.org/schema/jdbc 
					    http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd"
	default-lazy-init="true">
  
	<context:component-scan base-package="org.onetwo.project.batch"></context:component-scan>
	<context:annotation-config />
	<!-- 
	<bean class="org.onetwo.plugin.hibernate.HibernatePluginContext" />
	<bean class="org.onetwo.plugins.dq.DqPluginContext" />
	<bean class="org.onetwo.project.batch.BatchContextConfig"></bean>
	 -->
	
	<bean id="sessionFactory" class="org.onetwo.common.hibernate.ExtLocalSessionFactoryBean" >
    	<property name="dataSource" ref="dataSource"/>
    	<property name="packagesToScan">
			<list>
				<value>${jfish.base.packages}</value>
			</list>
		</property>
  	</bean>
  	
  	<!-- 
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:/org/springframework/batch/core/schema-drop-mysql.sql"/>
		<jdbc:script location="classpath:/org/springframework/batch/core/schema-mysql.sql"/>	
	</jdbc:initialize-database>
	 -->
  	
  	<batch:job-repository/>
  	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
	    <property name="jobRepository" ref="jobRepository" />
	</bean>
	
	
	<bean id="dataReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="classpath:inputDatas.txt"/>
		<property name="linesToSkip" value="1"/>
		<property name="lineMapper">
			<bean id="lineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean id="defaultLinetokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="user_name,age,email"></property>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean id="fieldMapper" class="org.onetwo.project.batch.test.mapper.UserFieldMapper"></bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<batch:job id="importDatas">
		<batch:step id="readAndWriteDatas">
			<batch:tasklet>
				<batch:chunk reader="dataReader" 
							 processor="userProcessorService"
							 writer="userWriterService"
							 commit-interval="10"/>
			</batch:tasklet>
		</batch:step>
	</batch:job>
  	

</beans>