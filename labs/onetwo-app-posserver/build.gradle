/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'way' at '15-3-28 上午10:23' with Gradle 2.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
 buildscript {
	 repositories {
		 maven { url 'http://repo.spring.io/plugins-release' }
	 }
	 dependencies {
		 //���������propdeps���
		 classpath("org.springframework.build.gradle:propdeps-plugin:0.0.6")
		 classpath("org.springframework.build.gradle:docbook-reference-plugin:0.2.6")
	 }
	 
 }

// In this section you declare where to find the dependencies of your project
repositories {
	maven { url "http://192.168.104.217:8888/nexus/content/repositories/snapshots" }
	maven { url "http://192.168.104.217:8888/nexus/content/groups/public" }
	maven { url "http://192.168.104.217:8888/nexus/content/repositories/thirdparty" }
	maven { url "http://repository.sonatype.org/content/groups/public/" }
	mavenCentral()
	mavenLocal()
    jcenter()
}



apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'java'

version = "1.0-SNAPSHOT"
ext.onetwoVersion = "3.1.9-SNAPSHOT";
ext.logbackVersion = "0.9.29"
ext.junitVersion = "4.10"

compileJava.options.encoding = 'UTF-8'
buildDir = "target"
compileJava {
	sourceCompatibility=1.8
	targetCompatibility=1.8
}

eclipseJdt << {
	File f = file('.settings/org.eclipse.core.resources.prefs')
	f.write('eclipse.preferences.version=1\n')
	f.append('encoding/<project>=utf-8')
}
eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources=true
	}
}


// In this section you declare the dependencies for your production and test code
dependencies {
	compile("org.onetwo:onetwo-common:${onetwoVersion}")
	compile("org.slf4j:slf4j-api:1.6.2")
	compile("org.slf4j:jcl-over-slf4j:1.6.2")
	compile("ch.qos.logback:logback-core:${logbackVersion}")
	compile("ch.qos.logback:logback-classic:${logbackVersion}")
	compile("io.netty:netty-all:4.0.26.Final")

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
	testCompile("junit:junit:${junitVersion}")
}
